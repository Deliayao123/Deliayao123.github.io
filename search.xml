<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2018%2F11%2F10%2F%E5%9C%A8ubuntu18.04%E7%9A%84fabric%E7%BD%91%E7%BB%9C%E4%B8%AD%E6%89%8B%E5%8A%A8%E9%83%A8%E7%BD%B2chaincode%2F</url>
    <content type="text"><![CDATA[title: 在ubuntu18.04的fabric网络中手动部署chaincodedate: 2018-11-10 13:40:29 tags: [blockchain]#根据官方网站给出的步骤部署好fabric网络。官方网站地址：https://hyperledger-fabric.readthedocs.io/en/release-1.2/getting_started.html #在fabric/scripts/fabric-samples/first-network目录下执行如下操作 ##//修改docker-compose-cli.yaml中的CORE_LOGGING_LEVEL = DEBUGCORE_LOGGING_LEVEL = DEBUG ##//用cryptogen工具产生证书cryptogen generate￼ ##//用configtxgen创建创世快，channel和peercryptogen generate –config=./crypto-config.yamlexport FABRIC_CFG_PATH=$PWDconfigtxgen -profile TwoOrgsOrdererGenesis -outputBlock ./channel-artifacts/genesis.block￼ ##//常见通道配置事务export CHANNEL_NAME=testchannel &amp;&amp; configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID $CHANNEL_NAME￼ ##//为org1和org2锚定peerconfigtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org1MSPanchors.tx -channelID $CHANNEL_NAME -asOrg Org1MSP￼configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org2MSPanchors.tx -channelID $CHANNEL_NAME -asOrg Org2MSP￼ ##//打开网络docker-compose -f docker-compose-cli.yaml up -d￼ ##//配置环境变量for PEER0export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/mspexport CORE_PEER_ADDRESS=peer0.org1.example.com:7051export CORE_PEER_LOCALMSPID=”Org1MSP”exportCORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt￼ ##//在网络中加入其它的通道docker exec -it cli bash //进入cli容器（这是进入默认的org1.peer0的）￼ 可以通过下面的修改默认的Environment variables for PEER0export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/mspexport CORE_PEER_ADDRESS=peer0.org1.example.com:7051export CORE_PEER_LOCALMSPID=”Org1MSP”exportCORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt ##//配置环境变量export CHANNEL_NAME=testchannel ##//创建通道peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx –tls –cafile peer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx –tls –cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem￼ ##//把peer加入channel（此时是peer0.org1.example.com）peer channel join -b mychannel.block￼ ###修改环境变量把其他的peer加入channel Environment variables for PEER0CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/mspCORE_PEER_ADDRESS=peer0.org1.example.com:7051CORE_PEER_LOCALMSPID=”Org1MSP”CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt Environment variables for PEER1CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp CORE_PEER_ADDRESS=peer0.org2.example.com:7051CORE_PEER_LOCALMSPID=”Org2MSP” CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt￼ ###peer channel join -b mychannel.block￼ ##//执行更新锚节点配置命令peer channel update -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/Org2MSPanchors.tx –tls –cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem￼如果需要加入其它组织，变更脚本变量后执行更新锚节点操作即可，至此，手动配置网络完成, 可以编写并测试链码。 ##//切换至：pee0.org1.example.comCORE_PEER_LOCALMSPID=”Org1MSP”CORE_PEER_ADDRESS=peer1.org1.example.com:7051CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabri c/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/mspCORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fa bric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.exa mple.com/tls/ca.crt ##//查看环境变量echo $CORE_PEER_LOCALMSPID #确认当前指定的orgecho $CORE_PEER_ADDRESS #确认当前指定的peerexport CHANNEL_NAME=mychannel #设置通道名称￼ ##//把本地写好的链码复制到docker cli容器中docker cp 本地路径 容器长ID:容器路径 ##//安装链码peer chaincode install -n mycc -v 1.0 -p github.com/chaincode/store/￼ ##//实例化链码peer chaincode instantiate -o orderer.example.com:7050 \–tls –cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem \-C $CHANNEL_NAME \-n mycc -v 1.0 \-c ‘{“Args”:[“str”,”helloworld”]}’ \-P “OR(‘Org1MSP.peer’,’Org2MSP.peer’)”￼ ###//测试链码get操作peer chaincode query -C $CHANNEL_NAME -n mycc -c ‘{“Args”:[“get”,”str”]}’￼ ###//测试链码set操作peer chaincode invoke -o orderer.example.com:7050 \–tls –cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem \-C $CHANNEL_NAME -n mycc \-c ‘{“Args”:[“set”,”str”,”hi zhaoyao”]}’￼ ##部署过程中遇到的错误及改正措施：1）创建channel时出错，Orderer log如下￼解决办法：清空所有docker容器，清空所有的环境从新开始部署。]]></content>
  </entry>
  <entry>
    <title><![CDATA[谈谈我与区块链的两三件事]]></title>
    <url>%2F2018%2F11%2F09%2F%E8%B0%88%E8%B0%88%E6%88%91%E4%B8%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9A%84%E4%B8%A4%E4%B8%89%E4%BB%B6%E4%BA%8B%2F</url>
    <content type="text"><![CDATA[我与区块链的缘分，从2016年开始。2016年底实验室开组会，听到导师随口提了一句区块链，自此区块链这个词伴随我走过了两年多的时间。最开始了解到的还是比特币，当时一个比特币只有几千块钱，想想如果那时候有远见哪怕买上一个，现在我也是穷学生中的“富翁”了吧。慢慢地，区块链渐渐从比特币中脱离出来，成为独当一面受追捧的新技术，假如区块链有灵魂，现在是不是能开心的飞起来呢。以太坊作为我的启蒙老师，让我在理论与实践的结合中快速成长。熟悉了区块链的基本思想，参与过几个公有链和联盟链的项目，期间最大的感受还是泡沫多于实用。近期忙于论文，有段时间没有接触区块链这个词了，感觉自己对他又陌生了一些，也能让我以旁观者的角度再审视一下区块链技术到底是什么。对于学经济管理的人主要研究区块链的经济学模型，货币体制，激励制度；学法律的人多在研究区块链背后涉及的法律法规和监管问题；学计算机的人更多是研究提高性能的加密算法、共识算法、状态通道等。作为一名工科生，自然是往技术层面去看。今天看到多牛资本董事长蒋海炳老师说的一句话，深受启发：信念坚定的人才适合做CEO。自诩我并不是一个信念坚定的人，我对区块链的认知像一条波浪线，当然这条线总体的趋势是上升的。有时觉得区块链真是个好技术可以解决这么多问题；有时觉得区块链是骗钱的没有实际作用。当然这是指以前对区块链理解不深刻的时候。现在我认为区块链会在各类基础设施都完善的基础上爆发巨大的力量。我这两年的研究主要想把区块链和服务计算结合起来做一些事情。你可能要问我什么是服务计算。我认为服务计算是一种分布式计算模式，随着各类基础设施的完善和网络应用的发展，现代企业存在因特网环境下企业交互、异构系统的集成和互操作、业务发生变化快速相应的能力等要求，使得企业内部或者各个企业之间的不同商业应用系统能实现快捷、灵活和无缝集成和相互协作。服务计算也分为很多研究方向，比如说SOA、网格计算/效用计算、业务流程管理等，其中Web服务作为SOA主要的实现方式也是研究的一个分支，我主要是研究服务计算中SOA分支下的Web服务组合问题。后期结合区块链技术研究怎么改进SOA的架构。把服务计算和区块链结合起来，用区块链技术消除服务计算中第三方角色，降低成本，提高效率。区块链作为一种思想同时也是一个技术，循环迭代，思想指导技术的发展；技术的发展又促进思想的进步，相辅相成。作为技术，需要实际应用于具体场景；作为思想需要指导技术的道路。我认为区块链最大的价值是量化那些很难被量化的权益或虚拟物品，如信用、名声等可以被资产化的数字形式媒介。我博士期间想继续深入研究区块链和服务计算的结合并且思考怎样把区块链和物联网结合起来，针对物联网特有的环境，研究区块链适合的共识算法和加密算法！想实现之前写的专利——先从智能酒店做起。博士期间还想解决最后一公里信任问题，目前用手机号注册账号可能会存在信息泄露的风险，直接关系到用户的隐私，怎样利用区块链技术减少电信诈骗是另一个研究方向。总结了一下硕士期间的成果和博士期间将要干的事情，希望所有人都能坚持自己的信念，并梦想成真。Take your passion and make it come true.]]></content>
      <tags>
        <tag>blockchain</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F11%2F09%2Fhello-world%2F</url>
    <content type="text"><![CDATA[欢迎来到我的blockchain小天地，请原谅我起了一个这么俗的名字！]]></content>
      <tags>
        <tag>test</tag>
      </tags>
  </entry>
</search>
